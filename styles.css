:root{ --bg-image: url('assets/bliss.jpg'); }
*{box-sizing:border-box}
html,body{height:100%}
body{margin:0;font-family:system-ui,Segoe UI,Arial,sans-serif;color:#fff}
.desktop{min-height:100dvh;display:flex;flex-direction:column;background-image: var(--bg-image); background-size: cover; background-position:center; background-repeat:no-repeat; padding-bottom: 60px}
.desktop-icons{display:grid;grid-template-columns:repeat(auto-fill,minmax(110px,1fr));gap:16px 8px;padding:16px}
.taskbar{position:fixed;bottom:0;left:0;right:0;height:56px;background:#245edb;display:flex;align-items:center;gap:10px;padding:6px 8px;z-index:1000}
.start-button,.task{background:none;border:none;padding:0}
.start-img{height:48px;display:block}
.task-img{height:44px;display:block}
.tray{margin-left:auto;display:flex;align-items:center;justify-content:flex-end;height:100%}
.tray-img{height:48px;display:block}

/* reserve space for fixed taskbar */
@supports (padding-bottom: env(safe-area-inset-bottom)){
  .desktop{ padding-bottom: calc(60px + env(safe-area-inset-bottom)); }
}

/* === Mobile app-like bottom bar === */
@media (max-width: 640px){
  .taskbar{
    height: 64px;
    padding: 6px 10px;
  }
  @supports (padding-bottom: env(safe-area-inset-bottom)){
    .taskbar{ padding-bottom: max(8px, env(safe-area-inset-bottom)); }
    .desktop{ padding-bottom: calc(64px + env(safe-area-inset-bottom)); }
  }
  .start-img{ height: 40px }
  .task-img{ height: 36px }
  .tray-img{ height: 40px }
  .task-buttons{ overflow-x: auto; -webkit-overflow-scrolling: touch }
}


/* === Auto-hide taskbar on mobile === */
@media (max-width: 640px){
  .taskbar{
    will-change: transform;
    transform: translateY(0);
    transition: transform .25s ease;
  }
  .taskbar.hidden{
    transform: translateY(calc(100% + env(safe-area-inset-bottom)));
  }
}

/* === Slightly larger desktop icons === */
.desk-img{ width: 72px; height: auto; }
@media (max-width:640px){
  .desk-img{ width: 60px; }
}



/* === Desktop icons base === */
.icon{
  width:110px;
  color:#e8f2ff;
  text-decoration:none;
  display:flex;
  flex-direction:column;
  align-items:center;
  gap:8px;
  padding:10px 6px;
  border-radius:10px;
  background: none;
  border: 1px solid transparent;
}
.icon .label{
  display:block;
  text-align:center;
  font-size:12px;
  text-shadow: 0 2px 2px rgba(0,0,0,.55);
}
/* Image-based icons */
.icon.img-icon{ padding: 6px 4px 10px }
.desk-img{ width: 72px; height: auto; image-rendering: crisp-edges; display:block }
@media (max-width:640px){ .desk-img{ width: 60px } }
/* Hover/selected visuals */
.icon.img-icon:hover{
  background: rgba(52, 116, 229, .22);
  border-color: rgba(255,255,255,.4);
  box-shadow: 0 0 0 1px rgba(24,76,178,.65) inset, 0 1px 0 rgba(255,255,255,.35) inset;
}
.icon.img-icon.selected{
  background: linear-gradient(180deg, rgba(120,170,255,.9), rgba(60,120,235,.95) 60%, rgba(40,95,210,.95));
  border-color: #96c0ff;
  box-shadow: 0 0 0 1px rgba(18,72,180,.8) inset, 0 2px 0 rgba(255,255,255,.35) inset, 0 6px 12px rgba(0,0,0,.15);
}
.icon.img-icon.selected .label{ color:#ffffff; font-weight:700 }


/* === Intro splash glitch === */
.intro{
  position: fixed;
  inset: 0;
  background: #000;
  z-index: 2000;
  opacity: 1;
  transition: opacity .45s ease, visibility 0s linear .5s;
  visibility: visible;
}
.intro.hidden{
  opacity: 0;
  visibility: hidden;
}
/* Base glitch layer uses the provided image as a background */
.glitch{
  position: absolute;
  inset: 0;
  background-image: var(--intro-img);
  background-size: cover;
  background-position: center;
  filter: none;
}
/* Overlay scanlines */
.intro::after{
  content:'';
  position:absolute;
  inset:0;
  pointer-events:none;
  background: repeating-linear-gradient(to bottom, rgba(0,0,0,.25) 0px, rgba(0,0,0,.25) 2px, rgba(0,0,0,0) 3px, rgba(0,0,0,0) 4px);
  mix-blend-mode: multiply;
  opacity:.35;
  animation: flicker .9s steps(2,end) 0s 2;
}
/* RGB split layers */
.glitch::before,
.glitch::after{
  content:'';
  position:absolute;
  inset:0;
  background-image: var(--intro-img);
  background-size: cover;
  background-position: center;
  mix-blend-mode: screen;
  opacity:.9;
}
.glitch::before{
  filter: hue-rotate(25deg) saturate(1.3) contrast(1.1);
  animation: glitchTop 1.2s steps(1,end) both;
}
.glitch::after{
  filter: hue-rotate(-25deg) saturate(1.4) contrast(1.15);
  animation: glitchBot 1.2s steps(1,end) both;
}

/* Keyframes for slice-style horizontal jumps */
@keyframes glitchTop{
  0%   { clip-path: inset(0 0 70% 0); transform: translateX(0) }
  6%   { clip-path: inset(0 0 72% 0); transform: translateX(-10px) }
  12%  { clip-path: inset(0 0 65% 0); transform: translateX(8px) }
  22%  { clip-path: inset(0 0 75% 0); transform: translateX(-16px) }
  32%  { clip-path: inset(0 0 60% 0); transform: translateX(6px) }
  46%  { clip-path: inset(0 0 70% 0); transform: translateX(-12px) }
  60%  { clip-path: inset(0 0 65% 0); transform: translateX(12px) }
  78%  { clip-path: inset(0 0 80% 0); transform: translateX(-18px) }
  92%  { clip-path: inset(0 0 68% 0); transform: translateX(10px) }
  100% { clip-path: inset(0 0 100% 0); transform: translateX(0) }
}
@keyframes glitchBot{
  0%   { clip-path: inset(70% 0 0 0); transform: translateX(0) }
  6%   { clip-path: inset(72% 0 0 0); transform: translateX(12px) }
  12%  { clip-path: inset(65% 0 0 0); transform: translateX(-8px) }
  22%  { clip-path: inset(75% 0 0 0); transform: translateX(16px) }
  32%  { clip-path: inset(60% 0 0 0); transform: translateX(-6px) }
  46%  { clip-path: inset(70% 0 0 0); transform: translateX(14px) }
  60%  { clip-path: inset(65% 0 0 0); transform: translateX(-10px) }
  78%  { clip-path: inset(80% 0 0 0); transform: translateX(18px) }
  92%  { clip-path: inset(68% 0 0 0); transform: translateX(-10px) }
  100% { clip-path: inset(100% 0 0 0); transform: translateX(0) }
}
@keyframes flicker{
  0%,100%{ opacity:.35 }
  50%{ opacity:.2 }
}


/* === Intro timing update: paused by default, run when .glitching === */
.glitch::before, .glitch::after { animation-play-state: paused; }
.intro.glitching .glitch::before,
.intro.glitching .glitch::after { animation-play-state: running; }

/* Hard white flash cut */
.intro .flash{
  position:absolute; inset:0; background:#fff; opacity:0; pointer-events:none;
}
.intro .flash.show{
  animation: flashCut .12s ease both;
}
@keyframes flashCut{
  0%{ opacity: 0 }
  10%{ opacity: 1 }
  100%{ opacity: 0 }
}

